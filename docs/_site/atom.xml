<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/atom.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-09-19T00:06:02+08:00</updated><id>http://localhost:4000/atom.xml</id><title type="html">Pre-Demo-Field</title><subtitle>Work Hard! Play Hard!</subtitle><author><name>DeamoV</name></author><entry><title type="html">Vim 安装配置</title><link href="http://localhost:4000/vim/2020/09/13/%E7%AE%80%E5%8D%95%E9%85%8D%E7%BD%AEvim/" rel="alternate" type="text/html" title="Vim 安装配置" /><published>2020-09-13T00:00:00+08:00</published><updated>2020-09-13T00:00:00+08:00</updated><id>http://localhost:4000/vim/2020/09/13/%E7%AE%80%E5%8D%95%E9%85%8D%E7%BD%AEvim</id><content type="html" xml:base="http://localhost:4000/vim/2020/09/13/%E7%AE%80%E5%8D%95%E9%85%8D%E7%BD%AEvim/">&lt;p&gt;配置安装步骤详情请看&lt;a href=&quot;https://github.com/Duan-JM/dotfiles&quot;&gt;这里&lt;/a&gt;呀，使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;bash vim/install.sh&lt;/code&gt; 的脚本就好了。这个文章会持续更新，主要记录的是当前配置内容，以及一些常用命令。&lt;/p&gt;

&lt;h3 id=&quot;当前使用插件&quot;&gt;当前使用插件&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s2&quot;&gt;&quot; Need attention
Plug 'APZelos/blamer.nvim'
let g:blamer_enabled = 1           &quot;&lt;/span&gt; auto &lt;span class=&quot;nb&quot;&gt;enable
let &lt;/span&gt;g:blamer_show_in_visual_modes &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 0
Plug &lt;span class=&quot;s1&quot;&gt;'sainnhe/edge'&lt;/span&gt;

&lt;span class=&quot;s2&quot;&gt;&quot; System
Plug 'vim-scripts/LargeFile'                            &quot;&lt;/span&gt; Fast Load &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Large files
Plug &lt;span class=&quot;s1&quot;&gt;'michaeljsmith/vim-indent-object'&lt;/span&gt;                  &lt;span class=&quot;s2&quot;&gt;&quot; used for align
Plug 'terryma/vim-smooth-scroll'                        &quot;&lt;/span&gt; smooth scroll
Plug &lt;span class=&quot;s1&quot;&gt;'wellle/targets.vim'&lt;/span&gt;                               &lt;span class=&quot;s2&quot;&gt;&quot; text objects
Plug 'ryanoasis/vim-devicons'                           &quot;&lt;/span&gt; extensions &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;icons
Plug &lt;span class=&quot;s1&quot;&gt;'brglng/vim-im-select'&lt;/span&gt;                             &lt;span class=&quot;s2&quot;&gt;&quot; auto change input methods, needs &lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;imselect&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; cmd
Plug 'unblevable/quick-scope'                           &quot;&lt;/span&gt; Advance setting &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;f t search
Plug &lt;span class=&quot;s1&quot;&gt;'mbbill/undotree'&lt;/span&gt;                                  &lt;span class=&quot;s2&quot;&gt;&quot; history of the undo

if has('nvim')
  Plug 'ncm2/float-preview.nvim'                              &quot;&lt;/span&gt; showing doc with float windows not preview beside the functions
  &lt;span class=&quot;nb&quot;&gt;let &lt;/span&gt;g:float_preview#docked &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 0
endif
Plug &lt;span class=&quot;s1&quot;&gt;'voldikss/vim-floaterm'&lt;/span&gt;                                  &lt;span class=&quot;s2&quot;&gt;&quot; floating terminaler you must like it

&quot;&lt;/span&gt; Coding
Plug &lt;span class=&quot;s1&quot;&gt;'neoclide/coc.nvim'&lt;/span&gt;, &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'branch'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'release'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
Plug &lt;span class=&quot;s1&quot;&gt;'dense-analysis/ale'&lt;/span&gt;, &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'for'&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cpp'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'python'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]}&lt;/span&gt;   &lt;span class=&quot;s2&quot;&gt;&quot; Syntax Check
Plug 'SirVer/ultisnips'                                 &quot;&lt;/span&gt; snippets
Plug &lt;span class=&quot;s1&quot;&gt;'Duan-JM/vdeamov-snippets'&lt;/span&gt;
Plug &lt;span class=&quot;s1&quot;&gt;'tpope/vim-commentary'&lt;/span&gt;
Plug &lt;span class=&quot;s1&quot;&gt;'Raimondi/delimitMate'&lt;/span&gt;                             &lt;span class=&quot;s2&quot;&gt;&quot; Brackets Jump 智能补全括号和跳转
                                                        &quot;&lt;/span&gt; 补全括号 &lt;span class=&quot;nb&quot;&gt;shift&lt;/span&gt;+tab出来
Plug &lt;span class=&quot;s1&quot;&gt;'vim-scripts/matchit.zip'&lt;/span&gt;                          &lt;span class=&quot;s2&quot;&gt;&quot; %  g% [% ]% a%
Plug 'andymass/vim-matchup'                             &quot;&lt;/span&gt; extence
Plug &lt;span class=&quot;s1&quot;&gt;'octol/vim-cpp-enhanced-highlight'&lt;/span&gt;, &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'for'&lt;/span&gt;:[&lt;span class=&quot;s1&quot;&gt;'c'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'cpp'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]}&lt;/span&gt;
Plug &lt;span class=&quot;s1&quot;&gt;'godlygeek/tabular'&lt;/span&gt;                                &lt;span class=&quot;s2&quot;&gt;&quot; align text
Plug 'tpope/vim-surround'                               &quot;&lt;/span&gt; change surroundings
                                                        &lt;span class=&quot;s2&quot;&gt;&quot; c[ange]s[old parttern] [new partten]
                                                        &quot;&lt;/span&gt; ds[partten]
                                                        &lt;span class=&quot;s2&quot;&gt;&quot; ys(iww)[partten] / yss)
Plug 'tpope/vim-repeat'                                 &quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;use &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; to repeat &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;surround
Plug &lt;span class=&quot;s1&quot;&gt;'liuchengxu/vista.vim'&lt;/span&gt;, &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'for'&lt;/span&gt;:[&lt;span class=&quot;s1&quot;&gt;'c'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'cpp'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'python'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'markdown'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]}&lt;/span&gt;         &lt;span class=&quot;s2&quot;&gt;&quot; show params and functions

Plug 'skywind3000/asyncrun.vim'
Plug 'skywind3000/asynctasks.vim'  &quot;&lt;/span&gt; This combination can change default run


&lt;span class=&quot;s2&quot;&gt;&quot; Writing Blog
Plug 'godlygeek/tabular', {'for': ['markdown']}
Plug 'plasticboy/vim-markdown', {'for': ['markdown']}
Plug 'iamcco/markdown-preview.nvim', { 'do': { -&amp;gt; mkdp#util#install() }, 'for': ['markdown', 'vim-plug']}
Plug 'mzlogin/vim-markdown-toc', {'for': ['markdown']}
&quot;&lt;/span&gt; :GenTocGFM/:GenTocRedcarpet
&lt;span class=&quot;s2&quot;&gt;&quot;:UpdateToc 更新目录
Plug 'dhruvasagar/vim-table-mode', {'for': ['markdown']}
&quot;&lt;/span&gt;&amp;lt;leader&amp;gt;tm to &lt;span class=&quot;nb&quot;&gt;enable&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&quot;|| in the insert mode to create a horizontal line
&quot;&lt;/span&gt;| match the | up row
&lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;leader&amp;gt;tdd to delete the row
&quot;&lt;/span&gt;&amp;lt;leader&amp;gt;tdc to delete the coloum
&lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;leader&amp;gt;tt to change the exist text to format table
Plug 'xuhdev/vim-latex-live-preview', {'for': ['tex']}                          &quot;&lt;/span&gt; Use when you work with cn
Plug &lt;span class=&quot;s1&quot;&gt;'lervag/vimtex'&lt;/span&gt;, &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'for'&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tex'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]}&lt;/span&gt;                                          &lt;span class=&quot;s2&quot;&gt;&quot; English is okay, fail with cn


&quot;&lt;/span&gt;FileManage
Plug &lt;span class=&quot;s1&quot;&gt;'scrooloose/nerdtree'&lt;/span&gt;
Plug &lt;span class=&quot;s1&quot;&gt;'Xuyuanp/nerdtree-git-Plugin'&lt;/span&gt;
Plug &lt;span class=&quot;s1&quot;&gt;'tiagofumo/vim-nerdtree-syntax-highlight'&lt;/span&gt;
Plug &lt;span class=&quot;s1&quot;&gt;'mhinz/vim-startify'&lt;/span&gt;
Plug &lt;span class=&quot;s1&quot;&gt;'justinmk/vim-dirvish'&lt;/span&gt;
Plug &lt;span class=&quot;s1&quot;&gt;'kristijanhusak/vim-dirvish-git'&lt;/span&gt;


&lt;span class=&quot;s2&quot;&gt;&quot; Appearance
Plug 'itchyny/lightline.vim'
Plug 'maximbaz/lightline-ale'
Plug 'flazz/vim-colorschemes'
Plug 'Yggdroot/indentLine'                                                      &quot;&lt;/span&gt; Show indent line
Plug &lt;span class=&quot;s1&quot;&gt;'kshenoy/vim-signature'&lt;/span&gt;                                                    &lt;span class=&quot;s2&quot;&gt;&quot; Visible Mark
Plug 'luochen1990/rainbow'                                                      &quot;&lt;/span&gt; multi color &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Parentheses

&lt;span class=&quot;s2&quot;&gt;&quot; Github
Plug 'mattn/gist-vim'                                                           &quot;&lt;/span&gt; :Gist &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt;/-ls :Gist &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;add gist name&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;add description&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;delete&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Plug &lt;span class=&quot;s1&quot;&gt;'mattn/webapi-vim'&lt;/span&gt;
Plug &lt;span class=&quot;s1&quot;&gt;'tpope/vim-fugitive'&lt;/span&gt;
Plug &lt;span class=&quot;s1&quot;&gt;'junegunn/gv.vim'&lt;/span&gt;                                                          &lt;span class=&quot;s2&quot;&gt;&quot; Rely on fugitive

&quot;&lt;/span&gt; Search
Plug &lt;span class=&quot;s1&quot;&gt;'Yggdroot/LeaderF'&lt;/span&gt;                                                         &lt;span class=&quot;s2&quot;&gt;&quot; Ultra search tools
                                                                                &quot;&lt;/span&gt; &amp;lt;c-]&amp;gt; open &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;vertical 
Plug &lt;span class=&quot;s1&quot;&gt;'junegunn/vim-slash'&lt;/span&gt;                                                       &lt;span class=&quot;s2&quot;&gt;&quot; clean hightline after search
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;ps:&lt;/strong&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;vim-scripts/YankRing.vim&lt;/code&gt; 有按键冲突稍后会修理&lt;/p&gt;

&lt;h3 id=&quot;常用命令&quot;&gt;常用命令&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;:Gdiffsplit &lt;span class=&quot;c&quot;&gt;# vim-fugitive&lt;/span&gt;
:gv         &lt;span class=&quot;c&quot;&gt;# gv see commits&lt;/span&gt;
:Vista      &lt;span class=&quot;c&quot;&gt;# 打开查看当前文件内的函数与变量&lt;/span&gt;
:g&amp;lt; &lt;span class=&quot;c&quot;&gt;# 可以用来你不小心跳转了，或者执行了什么指令，再回来 &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# The g&amp;lt; command can be used to see the last page of previous command output.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;常用快捷键&quot;&gt;常用快捷键&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 自定义快捷键
,             # leader
&amp;lt;leader&amp;gt; r    # run current script below

&amp;lt;leader&amp;gt; p    # leaderF 当前目录内搜索文件，
              # &amp;lt;c-n&amp;gt; 或 &amp;lt;c-p&amp;gt; 选中要的文件后，&amp;lt;c-]&amp;gt; 或 &amp;lt;c-x&amp;gt; 新窗口打开

&amp;lt;leader&amp;gt; nt   # 左侧打开文件目录
&amp;lt;leader&amp;gt; jd   # 函数跳转，一般用 &amp;lt;c-o&amp;gt; 返回
]&amp;lt;space&amp;gt;      # 下面加一行空行，同理 [&amp;lt;space&amp;gt;

# 常用默认快捷键
&amp;lt;c-\&amp;gt;&amp;lt;c-n&amp;gt;    # Termianl 返回 Noraml model
&amp;lt;c-w&amp;gt; h       # 切换窗口，同理 hjkl 为方向键
&amp;lt;c-w&amp;gt; =       # 调整窗口大小，同理还有 _ | &amp;lt; &amp;gt; + -
fFtT &amp;lt;char&amp;gt;   # 行内跳转，使用 QuickScope 进行辅助高亮
&amp;lt;leader&amp;gt; &amp;lt;c-f&amp;gt; &amp;lt;search-parttern&amp;gt; # search target pattern current files 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;非常用快捷键&quot;&gt;非常用快捷键&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;默认补全&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &amp;lt;c-x&amp;gt;&amp;lt;c-l&amp;gt; &lt;span class=&quot;c&quot;&gt;# 整行补全, 在 complet 选项定义范围内查找&lt;/span&gt;
 &amp;lt;c-x&amp;gt;&amp;lt;c-n&amp;gt; &lt;span class=&quot;c&quot;&gt;# 当前文本的关键词补全，关键词根据 iskeyword 定义&lt;/span&gt;
 &amp;lt;c-x&amp;gt;&amp;lt;c-k&amp;gt; &lt;span class=&quot;c&quot;&gt;# 从 dictionary 里面查找单词进行补全&lt;/span&gt;
 &amp;lt;c-x&amp;gt;&amp;lt;c-f&amp;gt; &lt;span class=&quot;c&quot;&gt;# 文件名补全&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;数值计算&lt;/p&gt;

    &lt;p&gt;在 &lt;code class=&quot;highlighter-rouge&quot;&gt;insert&lt;/code&gt; 模式下输入 &lt;code class=&quot;highlighter-rouge&quot;&gt;ctrl+=&lt;/code&gt; 。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;vim-性能-debug&quot;&gt;Vim 性能 debug&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;启动优化&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; vim &lt;span class=&quot;nt&quot;&gt;--startuptime&lt;/span&gt; &amp;lt;file&amp;gt; open_file
 &lt;span class=&quot;c&quot;&gt;# :help startup-options to see how to defin startup operations&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;运行 debug&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;c&quot;&gt;# 目的是 debug 一些日常卡顿的现象，个人有时候会运行时 vim 卡死，这时候就需要 debug 了&lt;/span&gt;
 vim &lt;span class=&quot;nt&quot;&gt;-V13&lt;/span&gt;&amp;lt;your/log/file/path&amp;gt; open_file

 &lt;span class=&quot;c&quot;&gt;# :h 'verbose' 去看输出日志的等级&lt;/span&gt;

 :message &lt;span class=&quot;c&quot;&gt;# 看最近的执行的指令，还有报错的内容&lt;/span&gt;
 :echo errmsg &lt;span class=&quot;c&quot;&gt;# 查看最近错信息&lt;/span&gt;
 :h errors &lt;span class=&quot;c&quot;&gt;# 查看各种报错代码的意思&lt;/span&gt;

 &lt;span class=&quot;c&quot;&gt;# 也可以做成 function&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; ToggleVerbose&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&amp;amp;verbose
         &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;verbosefile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;~/.log/vim/verbose.log
         &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;verbose&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;15
     &lt;span class=&quot;k&quot;&gt;else
         &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;verbose&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0
         &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;verbosefile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
     endif
 endfunction
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;changelog&quot;&gt;ChangeLog&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Update 2020-09-13&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;reference&quot;&gt;Reference&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/3025615/is-there-a-vim-runtime-log&quot;&gt;Is there a “vim runtime log”?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://harttle.land/2018/12/05/vim-debug.html&quot;&gt;如何调试 Vim 脚本 | Harttle Land&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>DeamoV</name></author><category term="Vim" /><category term="软件使用经验" /><summary type="html">配置安装步骤详情请看这里呀，使用 bash vim/install.sh 的脚本就好了。这个文章会持续更新，主要记录的是当前配置内容，以及一些常用命令。</summary></entry><entry><title type="html">GTD vs OKR 时间管理思考</title><link href="http://localhost:4000/%E6%9D%82%E9%A1%B9/2020/05/08/%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86%E6%96%B9%E6%B3%95/" rel="alternate" type="text/html" title="GTD vs OKR 时间管理思考" /><published>2020-05-08T00:00:00+08:00</published><updated>2020-05-08T00:00:00+08:00</updated><id>http://localhost:4000/%E6%9D%82%E9%A1%B9/2020/05/08/%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86%E6%96%B9%E6%B3%95</id><content type="html" xml:base="http://localhost:4000/%E6%9D%82%E9%A1%B9/2020/05/08/%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86%E6%96%B9%E6%B3%95/">&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;自从进入了研究生以后，时间就开始严重不够用了。虽然已经把玩游戏，刷微博看八卦这种纯粹浪费时间的事情全部去掉了，但是每天仍然被做不完的事情所充斥着。&lt;/p&gt;

&lt;p&gt;陪家人和&lt;del&gt;女票（已经没了）&lt;/del&gt;的时间变得非常的少，同时觉得获得的知识摄入量也没有因此大量提升，个人觉得自己进入了吴军老师说的假忙碌状态。于是总结了以下两点原因：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;事情安排出了问题
做了大量不重要但紧急的事情，导致重要不紧急的事情没有做，最终导致 deadline的时候，被各种重要紧急的事情压破，紧张感导致了工作效率的下降，最终导致恶性循环。&lt;/li&gt;
  &lt;li&gt;个人能力问题
时间的掌控，和身体的健康状况。个人不能做到到了指定的时间就立刻停止手头的事情。总会延长一点占用两个事件之间的休息时间，直接导致下一个任务过度劳累，效率下降。同时多次因为各种“事情”压迫了自己读书和健身的时间，这点长远来看是非常不好的。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;时间管理原则&quot;&gt;时间管理原则&lt;/h2&gt;

&lt;p&gt;这一部分是在使用 Things 作为自己的时间管理工具的第三个年头的回顾总结。中间发生了很多的事情，让我对于时间管理的意义进行了反思。这部分的内容的思想主要来源于万维钢老师的精英日课中《生活黑客》部分的启发。在开始总结自己的时间管理原则的之前，我需要问自己一个问题，我为什么要进行时间的量化管理？这个问题的答案很简单，提升时间效率。那么为什么要提高时间效率，现在的回答是需要提升自我与所做事项的把控感，以提升日常的幸福指数。&lt;/p&gt;

&lt;p&gt;但是事与愿违，我的生活幸福感最终并没有变高，还一定程度上间接的失去了某些重要的人，成为了室友口中的工作狂，同时在前言（研一时）写的问题却没有解决，只是每天做的事情变多了仅此而已。我觉得问题出现在了，使用中过于走形式而忽略了真正重要的部分。&lt;/p&gt;

&lt;p&gt;在万维钢老师中的精英日课中对于 GTD 有一个很精辟的整理，GTD 实际有用的原因如下：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;确定重要不紧急的事情被合理的做了 （要事优先）&lt;/li&gt;
  &lt;li&gt;减少任务切换的消耗，提升效率&lt;/li&gt;
  &lt;li&gt;外置任务到工具中，减少大脑的负担（脑子是用来思考的不是用来记忆的）&lt;/li&gt;
  &lt;li&gt;看到重要的事情被做完减少焦虑感&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;内容很正确，但是有个很隐性的问题，你如何确定什么事情是重要不紧急的时间，如何拆解你的最终目标。这是一个非常高阶的技能，如果不解决就会出现以下在我身上发生的事情：&lt;/p&gt;

&lt;p&gt;我计划完成毕业论文需要  A B C D 三个步骤，每个步骤 3 小时。然后在做完了 A 后，发现还有 E 这个步骤，于是我加了进去。之后在完成了 C 之后，发现导师要求我对于 A B 进行重写，然后以此循环，整个事件进入了不可控的状态。于是上述减少焦虑感就完全没有作用了。&lt;/p&gt;

&lt;p&gt;那么究竟应该如何做呢，我只是一个非常普通的研究生而已，不能指望自己成为一个大佬，什么事情面面俱到完全掌握，安排得体。方法也很简单，就是从能掌控的事情开始分割。完成 ACMMM 论文这个大事情我掌握不了，但是我可以切分为更细粒度的事情，比如写出 ver0.1 版本的 Abstract，完成朋友提示的扩展实验等等，随着经验的增加，慢慢的我相信可掌握的项目会越来越大。&lt;/p&gt;

&lt;p&gt;随着项目的减少，那么宏观的把我就降低了，我该如何把我的重要不紧急的事情顺利完成，并获得幸福感呢。这个就要引入 OKR 的概念，OKR 是 Google 家用于让员工全体针对某一共同目标进行自下而上努力的工具。有大佬说，这个工具不适用于个人，但是实际上来说，它具有锻炼个人思考的功效，以及提供我们自信心的功效。&lt;/p&gt;

&lt;h2 id=&quot;okr-思想&quot;&gt;OKR 思想&lt;/h2&gt;

&lt;p&gt;关于细节的部分我就不说了，网上有很多。在我的个人博客里也专门介绍过一次。这里只谈谈我个人的理解。OKR 应该这么读，O / KR。白话讲，O 就是你的目标，一个你心心相念的目标，一个你觉得完成了就能幸福的目标，可长期可短期。而 KR 就是衡量你是否完成这个 O 的指标。你看这里就完成了确立目标和目标分析的两个步骤。而长期目标（年度），短期目标（月或者季度）和超短期（月）则形成了一种递推的关系。举个例子如下：（当然同期我还有其他的 O）&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;UR （3 年的目标）保证高质量生活题哦啊见下，有闲钱完成自己想做的事情
    &lt;ul&gt;
      &lt;li&gt;KR 1 → 杭州拥有一套房子（并能够一把付完） + 月现金流 2w （年收入 40w）&lt;/li&gt;
      &lt;li&gt;KR 2 → 有能力用计算机技术帮助部分人从重复劳动中解放出来，让人专注与创新&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;O (季度目标) 获得上升专业领域的算法岗入场劵
    &lt;ul&gt;
      &lt;li&gt;KR 1 → 获得上升行业的算法暑期实习&lt;/li&gt;
      &lt;li&gt;KR 2 → 通过 Google 的 KictStart&lt;/li&gt;
      &lt;li&gt;KR 3 → 完成导师给出的论文要求，让老师同意实习&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;O (月目标) 完成 ACMMM 的论文投递 （反面事例，这个 O 是任务而不是目标）
    &lt;ul&gt;
      &lt;li&gt;KR 1 → 完成老师认可的 Abstract 和 Introduction&lt;/li&gt;
      &lt;li&gt;KR 2 → 在 Exp 中体现自己的模型的XXXX (保密)&lt;/li&gt;
      &lt;li&gt;KR 3 → 全文无语法错误，书写符合科技论文的要求&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这么做提高了容错率，也给了你提供了矫正的机会。如果这次的短期 OKR 设置的不好，偏离了路线，问题不大，下个月修正就好了。你看，这么做还进行了风险控制。值得强调的是 OKR 是一种强人的工具，他要求你不停的去挑战自我，完成目标的 70%，低了表示你高估了自己的能力或发生了没考虑到的问题，低了表示你过于安于现状，或者低估了自己。&lt;/p&gt;

&lt;h2 id=&quot;gtd-时间管理&quot;&gt;GTD 时间管理&lt;/h2&gt;

&lt;p&gt;那么这些和 GTD 有什么关系呢。我们可以看到，GTD 是完成任务，而 OKR 是相对更高层的规划。同时 OKR 中的每一项又有着自己的 DDL。这就很适合和 GTD 结合。&lt;/p&gt;

&lt;p&gt;Things APP 的设计理念：（你可以用自己趁手的工具）&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Things 的作用 1：收集任务，结合 shortcut 收集网页，自己脑子一闪而过的想法&lt;/li&gt;
  &lt;li&gt;Things 的作用 2：外置内容，让过去的我来计划好未来的我的内容&lt;/li&gt;
  &lt;li&gt;Things 的作用 3：让我划分任务到当前 OKR 中间的任务，任务集中于完成我的周期目标&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;GTD 的工作流如下：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;准备工作：日常经常反思（至少一个月一次），查看自己是否按照制定的 OKR 在前进，将 KR 的目标在 Things 中设定为项目区域（左侧的小方框）。这么做代表着责任的划分，代表着我要做的事情是为了完成某项 KR。为了不成为工作狂，我在左侧还加入了爱好这一责任分区。&lt;/li&gt;
  &lt;li&gt;早晨：查看当天要做的内容 -&amp;gt; 在 Things 这个软件中的今天栏目（一件一件往下做）
原则为：这个列表只能添加，不能重新回到其他列表&lt;/li&gt;
  &lt;li&gt;晚上：查看当天完成的内容，并准备第二天的内容 -&amp;gt; 在 Things 的左侧项目栏目中选择任务
原则为：
    &lt;ul&gt;
      &lt;li&gt;根据情况选择不同项目区域中的任务加入当天列表，并预估完成所需时间&lt;/li&gt;
      &lt;li&gt;查看当天任务完成情况，包含不同实际用时和预测用时番茄数的差别，查看当天的时间分配是否合理&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;其他时间：快速添加脑子中闪过要做的事情添加到收集栏目中 -&amp;gt; 通过手机或电脑添加任务到 things 收件箱中
原则为：
    &lt;ul&gt;
      &lt;li&gt;快速，准确的描述想要做的任务即可&lt;/li&gt;
      &lt;li&gt;在等电梯等零碎时间，查看收件箱的内容对收件箱进行如下6个操作
        &lt;ol&gt;
          &lt;li&gt;删除：一时冲动加进来的，现在看起来毫无价值&lt;/li&gt;
          &lt;li&gt;将来 / 可能：这些事情将来可能去做，但不会现在做，就加入到 Things 的 Sometime 中，每天晚上看看要不要加入到当天列表。&lt;/li&gt;
          &lt;li&gt;等待。这件事情需要派别人完成，就&lt;strong&gt;立刻去做&lt;/strong&gt;，然后加上一个时间提醒（Things 会自动移出 Inbox）。&lt;/li&gt;
          &lt;li&gt;下一步行动。如果需要亲自完成，若为 2 分钟以内能做完的，立刻做完，若两分钟以上，移到当天要做的任务中&lt;/li&gt;
          &lt;li&gt;下一步行动中很复杂的任务，移动到对应的项目区域，之后定期回顾处理&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;其他注意事项&quot;&gt;其他注意事项&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;注意自己的时间颗粒度，即分配时间的时间块，从半小时做起，慢慢减少。&lt;/li&gt;
  &lt;li&gt;注意自己的时间中，学习，生活，身体管理，这三方面的平衡。&lt;/li&gt;
  &lt;li&gt;注意自己在每个时间块中间的时间利用率&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;changelog&quot;&gt;ChangeLog&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;2018-11-27 : 初次总结&lt;/li&gt;
  &lt;li&gt;2020-05-08：添加新的思考，融入 OKR 思想&lt;/li&gt;
&lt;/ul&gt;</content><author><name>DeamoV</name></author><category term="GTD" /><category term="效率" /><category term="生活" /><summary type="html">前言 自从进入了研究生以后，时间就开始严重不够用了。虽然已经把玩游戏，刷微博看八卦这种纯粹浪费时间的事情全部去掉了，但是每天仍然被做不完的事情所充斥着。</summary></entry><entry><title type="html">终端登录北邮校园网</title><link href="http://localhost:4000/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/2019/08/30/%E5%8C%97%E9%82%AE%E6%A0%A1%E5%9B%AD%E7%BD%91%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%99%BB%E5%BD%95/" rel="alternate" type="text/html" title="终端登录北邮校园网" /><published>2019-08-30T00:00:00+08:00</published><updated>2019-08-30T00:00:00+08:00</updated><id>http://localhost:4000/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/2019/08/30/%E5%8C%97%E9%82%AE%E6%A0%A1%E5%9B%AD%E7%BD%91%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%99%BB%E5%BD%95</id><content type="html" xml:base="http://localhost:4000/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/2019/08/30/%E5%8C%97%E9%82%AE%E6%A0%A1%E5%9B%AD%E7%BD%91%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%99%BB%E5%BD%95/">&lt;h2 id=&quot;curl-直接登录&quot;&gt;curl 直接登录&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;重要的事情写在开头：&lt;/strong&gt;现在 &lt;code class=&quot;highlighter-rouge&quot;&gt;10.3.8.211&lt;/code&gt; 使用命令行登录可能会出现问题。&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;登录默认计流量的账号
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; curl &lt;span class=&quot;s1&quot;&gt;'http://10.3.8.217/login'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--data&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'user=student_id&amp;amp;pass=password&amp;amp;line='&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;登录联通 or 移动的账号&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; curl &lt;span class=&quot;s1&quot;&gt;'http://10.3.8.217/login'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--data&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'user=student_id&amp;amp;pass=password&amp;amp;line=CUC-BRAS'&lt;/span&gt;
 &lt;span class=&quot;c&quot;&gt;# CUC-BRAS for 联通&lt;/span&gt;
 &lt;span class=&quot;c&quot;&gt;# CMCC-BRAS for 移动&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;其他-tricky-的方法&quot;&gt;其他 Tricky 的方法&lt;/h2&gt;

&lt;p&gt;发现直接使用上面的代码不是很好使有时候，那么学校换了界面怎么办。这点很简单，就是在登录的时候在 Chrome 下按 F12 打开控制台。当你登录之后，选择 在 &lt;code class=&quot;highlighter-rouge&quot;&gt;Network&lt;/code&gt; 中的 &lt;code class=&quot;highlighter-rouge&quot;&gt;Name&lt;/code&gt; 下选择 &lt;code class=&quot;highlighter-rouge&quot;&gt;login&lt;/code&gt;，这个就是你用 &lt;code class=&quot;highlighter-rouge&quot;&gt;curl&lt;/code&gt; 的时候出现的那个 login。然后一直向下找能找到你的用户名和密码，前面的字符串就是对应的现在的这个 &lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;pass&lt;/code&gt;。这样子以后登陆界面即便是改了，我们也能自己造出来上面的明亮行登陆指令。&lt;/p&gt;</content><author><name>DeamoV</name></author><category term="杂项" /><category term="效率" /><category term="服务器小工具" /><summary type="html">curl 直接登录 重要的事情写在开头：现在 10.3.8.211 使用命令行登录可能会出现问题。 登录默认计流量的账号 curl 'http://10.3.8.217/login' --data 'user=student_id&amp;amp;pass=password&amp;amp;line='</summary></entry><entry><title type="html">SVD 奇异值分解</title><link href="http://localhost:4000/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/2019/08/26/SVD%E5%A5%87%E5%BC%82%E5%80%BC%E5%88%86%E8%A7%A3/" rel="alternate" type="text/html" title="SVD 奇异值分解" /><published>2019-08-26T00:00:00+08:00</published><updated>2019-08-26T00:00:00+08:00</updated><id>http://localhost:4000/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/2019/08/26/SVD%E5%A5%87%E5%BC%82%E5%80%BC%E5%88%86%E8%A7%A3</id><content type="html" xml:base="http://localhost:4000/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/2019/08/26/SVD%E5%A5%87%E5%BC%82%E5%80%BC%E5%88%86%E8%A7%A3/">&lt;h3 id=&quot;简述&quot;&gt;简述&lt;/h3&gt;
&lt;p&gt;SVD（Singular Value Decomposition），即奇异值分解，本质上是一种矩阵分解技术，在应用领域已经出现了进百年。矩阵分解技术指的是将一个原始矩阵表示成新的易于处理的形式，这种形式是两个或多个矩阵的乘积，可以简单的理解为因式分解。最早使用 SVD 的应用的领域为信息检索，使用 SVD 的检索方法称为隐性语义索引（Latent Semantic Index，&lt;strong&gt;LSI&lt;/strong&gt;）或隐性语义分析（Latent Semantic Analysis，&lt;strong&gt;LSA&lt;/strong&gt;）。&lt;/p&gt;

&lt;h3 id=&quot;前置知识&quot;&gt;前置知识&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;特征值与特征矩阵&lt;/li&gt;
  &lt;li&gt;基本的线性代数矩阵基础&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;细节说明&quot;&gt;细节说明&lt;/h3&gt;

&lt;p&gt;SVD 将原始的数据集矩阵  $A$  分解成三个矩阵  $U$、 $\Sigma$ 、 $V^T$。若原始矩阵为  $m&lt;em&gt;n$ 的矩阵，那么 $U$ 的维度为 $m&lt;/em&gt;m$， $\Sigma$ 的维度为 $m&lt;em&gt;n$， $V^T$ 的维度微 $n&lt;/em&gt;n$，写成公式如下：&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;A_{m*n} = U_{m*m}\Sigma_{m*n}V^T_{n*n}&lt;/script&gt;

&lt;p&gt;其中 $\Sigma$ 为对角矩阵，这些对角上的值为&lt;strong&gt;奇异值&lt;/strong&gt;，这个奇异值和特征值是有关系的，它是矩阵  $A^TA$ 的特征值的平方根。 左奇异矩阵 $U$ 为  $A^T A$ 的所有特征向量，右奇异矩阵  $V$ 为 $A A^T$ 的所有特征向量。&lt;/p&gt;

&lt;h3 id=&quot;代码使用&quot;&gt;代码使用&lt;/h3&gt;

&lt;p&gt;实现方式已经很成熟啦，使用 numpy 的库就好啦，函数如下：&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sigma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linalg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;svd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;注：详细实现过程参考《Numerical Linear Algebra》&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;详细的博客&quot;&gt;详细的博客&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/31386807&quot;&gt;知乎琥珀躺对 SVD 的讲解&lt;/a&gt;（很详细）&lt;/li&gt;
&lt;/ul&gt;

&lt;script type=&quot;text/x-mathjax-config&quot;&gt;MathJax.Hub.Config({tex2jax: {inlineMath:[['$','$']]}});&lt;/script&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot;&gt;&lt;/script&gt;</content><author><name>DeamoV</name></author><category term="数据降维" /><category term="MachineLearning" /><category term="MathTools" /><summary type="html">简述 SVD（Singular Value Decomposition），即奇异值分解，本质上是一种矩阵分解技术，在应用领域已经出现了进百年。矩阵分解技术指的是将一个原始矩阵表示成新的易于处理的形式，这种形式是两个或多个矩阵的乘积，可以简单的理解为因式分解。最早使用 SVD 的应用的领域为信息检索，使用 SVD 的检索方法称为隐性语义索引（Latent Semantic Index，LSI）或隐性语义分析（Latent Semantic Analysis，LSA）。</summary></entry><entry><title type="html">PCA 主成分分析</title><link href="http://localhost:4000/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/2019/08/20/PCA%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/" rel="alternate" type="text/html" title="PCA 主成分分析" /><published>2019-08-20T00:00:00+08:00</published><updated>2019-08-20T00:00:00+08:00</updated><id>http://localhost:4000/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/2019/08/20/PCA%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90</id><content type="html" xml:base="http://localhost:4000/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/2019/08/20/PCA%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/">&lt;h2 id=&quot;pca&quot;&gt;PCA&lt;/h2&gt;
&lt;h3 id=&quot;简要说明&quot;&gt;简要说明&lt;/h3&gt;
&lt;p&gt;PCA 的全称为&lt;strong&gt;主成分分析&lt;/strong&gt;（Principal Component Analysis）。简单的来说，PCA 的本质是将原来的坐标系转变为新的坐标系，而新的坐标系的基的选择为原始数据中方差最大的方向。&lt;/p&gt;

&lt;h3 id=&quot;原理&quot;&gt;原理&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;基变换的矩阵表示&lt;/p&gt;

    &lt;p&gt;之前我们说到 PCA 的本质就是基的变换，而基的变换是可以很清晰的使用矩阵相乘来表示的。&lt;/p&gt;

    &lt;script type=&quot;math/tex; mode=display&quot;&gt;\left( 
 \begin{array}{cc} 
 p_1 \\
 p_2 \\
 ... \\
 p_r 
 \end{array}
 \right)

 \left(
 \begin{array}{c}
 a_1, a_2, ..., a_M
 \end{array} 
 \right)
 =
 \left(
 \begin{array}{c}
 p_1a_1, p_1a_2, ..., p_1a_M \\ 
 p_2a_1, p_2a_2, ..., p_2a_M \\
 ..\\
 p_na_1, p_na_2, ..., p_na_M
 \end{array} 
 \right)&lt;/script&gt;

    &lt;p&gt;其中 $p$ 为新的坐标系的基，为一组正交的 $M$ 维的行向量， $a$ 为原始数据，为 $M$ 维列向量。正样子我们就完成了原始数据的坐标转换。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;保证转换后的值尽可能的分散且独立&lt;/p&gt;

    &lt;p&gt;这样子我们就应该保证最终数据的方差大且协方差小，这里我们让数据矩阵 $X$ 同自己的转置 $X^T$ 相乘，可以看到只要我们将其化成对角矩阵就满足了方差最大，协方差为 0 的效果。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;进行简单的公式推导&lt;/p&gt;

    &lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{split}
 D &amp;= \frac{1}{m}YY^T \\
 &amp;= \frac{1}{m}(PX)(PX)^T\\
 &amp;=P(\frac{1}{m}XX^T)P^T\\
 &amp;=PCP^T
 \end{split} %]]&gt;&lt;/script&gt;

    &lt;p&gt;从这个公式我们就可以看出，最终的结果应该对原始数据进行 $\frac{1}{m}XX^T$ 的处理之后，在找一组基能把它画成对角矩阵。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;降维&lt;/p&gt;

    &lt;p&gt;可以看到最终的数据的维度是和基的数量有关的，而基的数量又和最终的特征值有关，所以当我们只取前 $K$ 大的特征值就完成了，降维到 $K$ 维的目的。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;实现手法&quot;&gt;实现手法&lt;/h3&gt;
&lt;p&gt;具体实现的伪代码如下：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 将原始数据按列组成 n 行 m 列矩阵 X&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 将 X 的每一行（代表一个属性字段）进行零均值化，即减去这一行的均值）&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 求出协方差矩阵&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 求出协方差矩阵的特征值及对应的特征向量&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 将特征向量按对应特征值大小从上到下按行排列成矩阵，取前 k 行组成矩阵 P&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Y=PX即为降维到k维后的数据&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-matlab highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linear_PCA&lt;/span&gt; 

&lt;span class=&quot;c1&quot;&gt;%% PARAMETERS&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;			&lt;span class=&quot;c1&quot;&gt;% number of data points&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;% covariance matrix&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;%% PROGRAM&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;tic&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;randn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;% correlated two-dimensional data&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Xp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;km_pca&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;		&lt;span class=&quot;c1&quot;&gt;% obtain eigenvector matrix E, eigenvalues v and principal components Xp&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;toc&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;%% OUTPUT&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(:,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;figure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;hold&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(:,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(:,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Xp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Xp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'.r'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'.b'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)],&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'g'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'LineWidth'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)],&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'k'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'LineWidth'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;axis&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;equal&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;legend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'data'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'first principal components'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'second principal components'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'first principal direction'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'second principal direction'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'linear PCA demo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Xp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;km_pca&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;eig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;'*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;diag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'descend'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;E&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(:,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Xp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(:,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;优秀的文章&quot;&gt;优秀的文章&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/21580949&quot;&gt;PCA的数学原理(转) - 知乎&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>DeamoV</name></author><category term="数据降维" /><category term="MachineLearning" /><category term="MathTools" /><summary type="html">PCA 简要说明 PCA 的全称为主成分分析（Principal Component Analysis）。简单的来说，PCA 的本质是将原来的坐标系转变为新的坐标系，而新的坐标系的基的选择为原始数据中方差最大的方向。</summary></entry><entry><title type="html">OKR 简单总结</title><link href="http://localhost:4000/%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86/2019/08/19/OKR%E6%80%BB%E7%BB%93/" rel="alternate" type="text/html" title="OKR 简单总结" /><published>2019-08-19T00:00:00+08:00</published><updated>2019-08-19T00:00:00+08:00</updated><id>http://localhost:4000/%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86/2019/08/19/OKR%E6%80%BB%E7%BB%93</id><content type="html" xml:base="http://localhost:4000/%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86/2019/08/19/OKR%E6%80%BB%E7%BB%93/">&lt;blockquote&gt;
  &lt;p&gt;OKR (Objectives and Key Results) is a goal system used by Google and others. It is a simple tool to create alignment and engagement around measurable goals.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;okr-的目标&quot;&gt;OKR 的目标&lt;/h2&gt;
&lt;p&gt;首先需要指出的是，OKR 的宗旨是协调团队内的成员，让所有成员无歧义的明白项目的前进的方向，与自己不应该做什么，将战略落实到执行的管理方法。因而 OKR 是&lt;strong&gt;不建议用于个人的&lt;/strong&gt;。&lt;/p&gt;

&lt;h2 id=&quot;okr-的细节执行&quot;&gt;OKR 的细节执行&lt;/h2&gt;
&lt;h3 id=&quot;思维的转变&quot;&gt;思维的转变&lt;/h3&gt;
&lt;p&gt;OKR 之前的 ToDoList 或者说 KPI 式的管理的区别在于 OKR 的任务设定的&lt;strong&gt;思维结果导向的&lt;/strong&gt;。这点从 &lt;strong&gt;O&lt;/strong&gt;bjective 到 &lt;strong&gt;K&lt;/strong&gt;ey&lt;strong&gt;R&lt;/strong&gt;esult 的过程，就可以很好的体现出来，我们的 Objective 是一个纲领性的方向，是我们&lt;strong&gt;希望得到的结果&lt;/strong&gt;，比如本期内完成一篇&lt;strong&gt;有效&lt;/strong&gt;且&lt;strong&gt;有趣&lt;/strong&gt;的小样本方向的论文。注意这里的 Objective 是允许出现模糊的形容词的，而 KR 则会用实际可量化的指标去诠释如何完成目标。于是针对上面的 Objective 我们需要去想，什么样的可衡量的指标是可以贡献到我们有效和有趣的点。于是我们的 KR1 就可以为，设计一个能提升现有标准 2% 的 SOTA 模型（有效）。KR2 为，模型中含有 3 个前人没有考虑过的要素（有趣）。从上面的例子我们可以看出整体的 KR 的设定是从结果 Objective 出发进行思考的，同时 KR 也是相对独立的。&lt;/p&gt;

&lt;h3 id=&quot;ultimate-obejctive---objective---keyresult---initiative&quot;&gt;Ultimate Obejctive - Objective - KeyResult - Initiative&lt;/h3&gt;
&lt;p&gt;在经过了思维的转变之后，我们进入更加细节的任务设定。接下来我们要从类间和类内两个角度来介绍 OKR。&lt;/p&gt;

&lt;p&gt;首先，是类间的关系。UO -&amp;gt; Objective -&amp;gt; KeyResult -&amp;gt; Initiative 他们是互相贡献的关系，UO 是我们的长期目标，是一个很长时间的 Objective，随着目标的推进这个 UO 是可以转化成 Objective 的。而 KeyResult 则是针对 Objective 的可衡量的关键结果，这意味着 KeyResult 完成后一定能让整个团队接近总的这个 Obejctive 同时这个任务还能被 0～1 量化。除此之外，KR 是不能被施行人&lt;strong&gt;直接影响的&lt;/strong&gt;，直接影响指的是执行的人能直接完成的任务，比如对于长跑运动员跑 10km 是能直接影响的 Task ，就不能是一个 KR，而对一个普通人他不能直接跑那么远，那么这个 10km 就可以是一个 KR。最后 Initiative 就是执行者&lt;strong&gt;能直接影响&lt;/strong&gt;的 Task。&lt;/p&gt;

&lt;p&gt;接下来，就简单的来说下类内的关系。Objective 和 Objective 是完全独立的两个不相交的任务，一个 Objective 是不能成为另一个 Objective 的 Ultimate Objective 或者是 KR 的。这点保证了最终在实施时任务边界的清晰可拆分。同理 KR 和 Initiative 也是符合这个要求的。&lt;/p&gt;

&lt;h2 id=&quot;杂项&quot;&gt;杂项&lt;/h2&gt;
&lt;p&gt;一般而言，OKR 是以季度为单位进行实时的，在中间是可以进行调整的。且 OKR 是不能作为员工的 KPI 评价依据的。同时 OKR 的最佳得分其实是 0.6～0.7，这样就确保了 Objective &lt;strong&gt;有足够的野心&lt;/strong&gt;。如果这一期 OKR 得分为 1 就需要反思是否任务太简单，如果太低则考虑是任务过于难了，还是自己没有认真。这样子就保证了每一个人的能力被更加充分的发挥了出来。&lt;/p&gt;

&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/BUPT/magic-mirror/issues/17&quot;&gt;AMC 会议 issue 讨论&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>DeamoV</name></author><category term="TaskManagement" /><summary type="html">OKR (Objectives and Key Results) is a goal system used by Google and others. It is a simple tool to create alignment and engagement around measurable goals.</summary></entry><entry><title type="html">Style Transfer Loss Summary</title><link href="http://localhost:4000/losses/2019/08/12/TransferLoss/" rel="alternate" type="text/html" title="Style Transfer Loss Summary" /><published>2019-08-12T00:00:00+08:00</published><updated>2019-08-12T00:00:00+08:00</updated><id>http://localhost:4000/losses/2019/08/12/TransferLoss</id><content type="html" xml:base="http://localhost:4000/losses/2019/08/12/TransferLoss/">&lt;h1 id=&quot;transferloss&quot;&gt;TransferLoss&lt;/h1&gt;
&lt;h2 id=&quot;vggloss&quot;&gt;VGGLoss&lt;/h2&gt;
&lt;p&gt;VGGLoss 是提取 VGG 的不同的层学到的图片的特征，之后通过对比这些不同层的特征来计算两个图片的相似度，计算相似度的功能如下：&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;l_{vgg}(x, y) = ||f_\phi(x) - f_\phi(y)||^{2}_2&lt;/script&gt;

&lt;h2 id=&quot;styleloss&quot;&gt;StyleLoss&lt;/h2&gt;
&lt;p&gt;StyleLoss 和 VGGLoss 相似，不同的是计算相似的时候是使用的 &lt;a href=&quot;https://zh.wikipedia.org/wiki/%E6%A0%BC%E6%8B%89%E5%A7%86%E7%9F%A9%E9%98%B5&quot;&gt;Gram 矩阵&lt;/a&gt;，直观上的差别就是，VGGLoss 是不同的层的结果之间的相减求平方，而 Style Loss 是两个特征要先乘自己的转置之后再做类似 VGGLoss 的操作。&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;l_{style}(x, y) = ||G(f_\phi(x)) - G(f_\phi(y))||^{2}_2&lt;/script&gt;

&lt;h2 id=&quot;ssimloss--mseloss&quot;&gt;SSIMLoss &amp;amp; MSELoss&lt;/h2&gt;
&lt;p&gt;常用的 MSELoss 针对色彩的敏感度比模糊度高，为了让图片生成更好的清晰的图片，可以用 SSIMLoss 来替代 MSE Loss。具体的公式和解释可以看&lt;a href=&quot;https://zhuanlan.zhihu.com/p/67199699&quot;&gt;这个文章&lt;/a&gt;。直接能用的源码&lt;a href=&quot;https://github.com/Po-Hsun-Su/pytorch-ssim.git&quot;&gt;在这里&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;vggloss-和-styleloss-的代码实现&quot;&gt;VGGLoss 和 StyleLoss 的代码实现&lt;/h2&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 注意里面对每一层都加了权重，根据个人需要自行选择&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;torch&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;torch.nn&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;torchvision&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;models&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;time&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Vgg19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requires_grad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Vgg19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;vgg_pretrained_features&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vgg19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pretrained&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;features&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slice1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sequential&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slice2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sequential&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slice3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sequential&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slice4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sequential&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slice5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sequential&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slice1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vgg_pretrained_features&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slice2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vgg_pretrained_features&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slice3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vgg_pretrained_features&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slice4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vgg_pretrained_features&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slice5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vgg_pretrained_features&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requires_grad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;param&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parameters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;requires_grad&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;forward&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;h_relu1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slice1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;h_relu2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slice2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h_relu1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;h_relu3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slice3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h_relu2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;h_relu4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slice4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h_relu3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;h_relu5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slice5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h_relu4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h_relu1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h_relu2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h_relu3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h_relu4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h_relu5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;VGGLoss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;layids&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;device&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;device&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cpu&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VGGLoss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vgg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Vgg19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cuda&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_available&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;#self.vgg.cuda()&lt;/span&gt;
            &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vgg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vgg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;device&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;criterion&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;L1Loss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layids&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;layids&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;forward&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x_vgg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y_vgg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vgg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vgg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layids&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layids&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_vgg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;criterion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_vgg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y_vgg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;detach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;StyleLoss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;layids&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;StyleLoss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vgg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Vgg19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cuda&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_available&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
            &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vgg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cuda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;criterion&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;L1Loss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layids&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;layids&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;forward&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x_vgg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y_vgg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vgg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vgg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layids&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layids&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_vgg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;x_gram&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gram&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_vgg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;detach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;y_gram&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gram&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y_vgg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;detach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;criterion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_gram&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y_gram&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;gram&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
        gram compute
        &quot;&quot;&quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>DeamoV</name></author><category term="Losses" /><category term="StyleTransfer" /><summary type="html">TransferLoss VGGLoss VGGLoss 是提取 VGG 的不同的层学到的图片的特征，之后通过对比这些不同层的特征来计算两个图片的相似度，计算相似度的功能如下：</summary></entry><entry><title type="html">《思维简史》 - 伦纳德·蒙洛迪诺</title><link href="http://localhost:4000/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/2019/08/09/%E6%80%9D%E7%BB%B4%E7%AE%80%E5%8F%B2-%E4%BC%A6%E7%BA%B3%E5%BE%B7-%E8%92%99%E6%B4%9B%E8%BF%AA%E8%AF%BA/" rel="alternate" type="text/html" title="《思维简史》 - 伦纳德·蒙洛迪诺" /><published>2019-08-09T00:00:00+08:00</published><updated>2019-08-09T00:00:00+08:00</updated><id>http://localhost:4000/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/2019/08/09/%E6%80%9D%E7%BB%B4%E7%AE%80%E5%8F%B2-%E4%BC%A6%E7%BA%B3%E5%BE%B7%C2%B7%E8%92%99%E6%B4%9B%E8%BF%AA%E8%AF%BA</id><content type="html" xml:base="http://localhost:4000/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/2019/08/09/%E6%80%9D%E7%BB%B4%E7%AE%80%E5%8F%B2-%E4%BC%A6%E7%BA%B3%E5%BE%B7-%E8%92%99%E6%B4%9B%E8%BF%AA%E8%AF%BA/">&lt;h2 id=&quot;简要&quot;&gt;简要&lt;/h2&gt;
&lt;p&gt;思维简史这本书是伦纳德·蒙洛迪诺关于人类思维发展、进步的“历史”系书籍。由于作者本身为物理学家，书中后半段对物理发展的描写比较多。&lt;/p&gt;

&lt;h2 id=&quot;读后感&quot;&gt;读后感&lt;/h2&gt;
&lt;p&gt;读这本书纯粹源于一个巧合，在看赫拉利的三部曲的时候偶然间看到了这本书。而这本书的作者又是和霍金一起写果壳中的宇宙的人，于是下载了它。不得不说，这本书给了我很深的印象，让我思考了一些之前从未想过的问题，并对前人伟大科学家产生一种前所未有的敬仰之情。&lt;/p&gt;

&lt;p&gt;对我而言，第一个问题就是。古时候人们为什么能想象到一些超乎感官直接体验的东西，并且抽象它让它变得可以被接受。这里面最典型的例子就是“时间”，时间对于当时的人抽象程度完全不亚于四维空间之余当今的我们。而最终这些支持着一代代科学家最终将时间概念确立并推广到全人类，从根本上来说还是人类对未知事物的好奇与求真的探索。而对于我自己的启发则是，作为一个人，永远都不能放弃自己对未知事物的探索，对待奇特的是研究结果应该多问几个为什么。&lt;/p&gt;

&lt;p&gt;第二问题是达尔文为什么会让自己的作品和后辈的作品放在一起让世人比较。一个耗尽一生的研究，怎能容得功亏一篑的风险，以他当时的名望，完全有能力将后辈的研究成果完全埋没，这样他就可以高枕无忧的发表自己的作品。或者像牛顿一样打压新人，但是他确选择让自己的作品和后辈的作品同时发表，这种行为真的非常值得我们尊敬。&lt;/p&gt;

&lt;p&gt;最后一个则是和我自己本身的研究相关。那就是量子力学和经典物理的区别，如果量子力学说构成我们的物质是不可测的，那么我们还能选择相信他么，即便它的应用确乎是正确的。这就和现在一直在争论的深度神经网络一样，我们知道他学的是什么，效果实打实的好，但是中间黑箱部分就和量子力学的底层一样是不可测的，那么我们还能以它为基础进行研究么？爱因斯坦在后期选择坚定他自己的哲学观点，他认定上帝不会扔骰子，他认为这种建立在流沙的学科终究会崩塌。这和很多现今反对深度神经网络的研究员一样。那么我们应该坚信哪个呢？这就引入了下一个我觉得很重要的问题。&lt;/p&gt;

&lt;p&gt;这个问题就是信念，从古至今可以看到任何一个伟大的科学家都具有一个共有的品质，那就是偏执一般的信念。我相信我自己的是对的，即便没有完美的证据支持自己的理论，这其中最显著的就是门捷列夫，他居然能在自己的实验结果不完善的，理论不充分的情况下去质疑别人测量的数据结果，并奇迹般地着证明了自己的正确性。那么如果，他错了呢？这只能说是一种偏执的自信吧，但是也正是这种偏执让他得到了他应得的荣誉。&lt;/p&gt;

&lt;p&gt;最后呢，这本书是很有意思的，我只是把自己感兴趣的地方写了下来，看完它肯定会有一种神奇的思维提升的感受，曾经模糊的科学发展史会变得更加的清晰，个人的话之后应该还会再看一遍它的！&lt;/p&gt;</content><author><name>DeamoV</name></author><category term="Reading" /><summary type="html">简要 思维简史这本书是伦纳德·蒙洛迪诺关于人类思维发展、进步的“历史”系书籍。由于作者本身为物理学家，书中后半段对物理发展的描写比较多。</summary></entry><entry><title type="html">Few-shot Learning 总结</title><link href="http://localhost:4000/fewshotlearning/2019/03/26/few_shot_summery_01/" rel="alternate" type="text/html" title="Few-shot Learning 总结" /><published>2019-03-26T00:00:00+08:00</published><updated>2019-03-26T00:00:00+08:00</updated><id>http://localhost:4000/fewshotlearning/2019/03/26/few_shot_summery_01</id><content type="html" xml:base="http://localhost:4000/fewshotlearning/2019/03/26/few_shot_summery_01/">&lt;h2 id=&quot;n-ways-k-shot-few-shot-learning-问题的描述&quot;&gt;N ways K shot few-shot Learning 问题的描述&lt;/h2&gt;
&lt;p&gt;最终训练模型的效果需要达到，给模型之前完全没见过的  $N$ 个新类，每个新类中只有 $K$ 个样本。该模型需要能够通过利用这仅有的 $N \times K$  个样本，来对接下来给出的新样本进行分类。在 RelationNet work &lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; 的问题描述中，将这给出的 $N \times K$ 个样本集称为 Support Set ，待分类的图片集称为 Query Set。&lt;/p&gt;
&lt;h2 id=&quot;常用的训练步骤&quot;&gt;常用的训练步骤&lt;/h2&gt;
&lt;h3 id=&quot;训练集中的类的样本不止-k-个样本&quot;&gt;训练集中的类的样本不止 $K$ 个样本&lt;/h3&gt;
&lt;p&gt;若我们使用数据集 $D$ 来训练模型， 而 $D$  中所有的类中 $a$ 个样本，eg. mini-imagenet 中每个类有 600 个样本，则  $a=600$。整体的训练过程可以分为多个 meta-learning 的过程，在每个 meta-learning 开始的时候，从训练集 $D$ 中随机抽取 $N$ 个类，每个类中抽取 $K$ 个样本做成 Support Set，除此之外，还从已经抽取得到每个类中，除已抽取的样本外，再抽取 $T$ 个样本作为 Query Set。之后，模型将会去学习如何根据 Support Set 的样本，来正确分类 Query Set 的样本。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;注：整个 Meta-Learning 的训练过程，模拟的是当模型真正遇到小样本学习的过程。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;该种方法的模型有：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Relation Network&lt;/li&gt;
  &lt;li&gt;Matching Network&lt;/li&gt;
  &lt;li&gt;Prototypical Network&lt;/li&gt;
  &lt;li&gt;Siamese Network&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;用生成的方式补充小样本分类的方式&quot;&gt;用生成的方式补充小样本分类的方式&lt;/h3&gt;
&lt;p&gt;这种方式，主要分为两个组件，一方面是传统的 DCNN 分类器，如 ResNet，另一方面则是用于生成新的“假”样本的模型。其训练过程为，首先将 DCNN 在已有的大样本数据集上进行训练，得到一个在大样本数据集上表现良好的模型。之后，使用生成模型结合大样本数据集中类的样本和新类中的小样本，生成“假”的新类的图片，直到小样本的类中的样本数和大样本数据集中的类样本数目相同。最后，再使用之前训练的 DCNN 分类器在这些含有生成器生成的“假”样本的新类上进行训练，以达到小样本学习的目的。&lt;/p&gt;

&lt;p&gt;该种方法的模型有：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Low-shot Learning via Covariance-Preserving Adversarial Augmentation Networks&lt;/li&gt;
  &lt;li&gt;Low-Shot Learning from Imaginary Data&lt;/li&gt;
  &lt;li&gt;Low-shot Visual Recognition by Shrinking and Hallucinating Features&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;训练集中的类的样本只有-k-个样本&quot;&gt;训练集中的类的样本只有 $K$ 个样本&lt;/h3&gt;
&lt;p&gt;在这种方式中，在训练的时候模型就只能使用每个类只含有 $K$ 个样本的数据集。&lt;/p&gt;

&lt;p&gt;该种方法的模型有：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Optimization as a Model for Few-Shot Learning&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;relation-network&quot;&gt;Relation Network&lt;/h2&gt;
&lt;p&gt;Relation Network 是 few-shot learning 中比较直观的模型。正规的来讲，他分为两部分，一部分是特征提取部分 &lt;code class=&quot;highlighter-rouge&quot;&gt;encoder&lt;/code&gt;，另一部分是计算相似度的&lt;code class=&quot;highlighter-rouge&quot;&gt;relation network&lt;/code&gt;。其中 &lt;code class=&quot;highlighter-rouge&quot;&gt;relation network&lt;/code&gt;，部分就是通过两层全连接层学到输入的两个拼接后的样本的相似度。其模型图如下图所示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog/20190326fewshotsummery/CleanShot%202019-03-23%20at%2017.07.37.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;注：源码中，5 ways 5 shot 的训练是取得 $5$ 个 Support 样本和 $10$ 个 Query 样本。&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;prototypical-network&quot;&gt;Prototypical Network&lt;/h2&gt;
&lt;p&gt;这个模型简单的来说就是将图片 encoder 成向量之后，再将 Support Set 中的所有的样本求和取平均成一个向量后，再和 Query 的向量求欧式距离，以代表图片和类别的相似度。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog/20190326fewshotsummery/2V5X5ZlMRhSxVt8Zc9QFpw_thumb_f36.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;matching-network&quot;&gt;Matching Network&lt;/h2&gt;
&lt;p&gt;Matching Network 则是用 Query 的样本和 Support 的样本做 Attention 操作，最终得到该图片和其他图片的相似度。
&lt;img src=&quot;/assets/images/blog/20190326fewshotsummery/CleanShot%202019-03-26%20at%2009.04.11.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;script type=&quot;text/x-mathjax-config&quot;&gt;MathJax.Hub.Config({tex2jax: {inlineMath:[['$','$']]}});&lt;/script&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot;&gt;&lt;/script&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;Learning to Compare：Relation Network for Few-Shot Learning CVPR 2018 &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>DeamoV</name></author><category term="Few_Shot_Learning" /><summary type="html">N ways K shot few-shot Learning 问题的描述 最终训练模型的效果需要达到，给模型之前完全没见过的 $N$ 个新类，每个新类中只有 $K$ 个样本。该模型需要能够通过利用这仅有的 $N \times K$ 个样本，来对接下来给出的新样本进行分类。在 RelationNet work 1 的问题描述中，将这给出的 $N \times K$ 个样本集称为 Support Set ，待分类的图片集称为 Query Set。 常用的训练步骤 训练集中的类的样本不止 $K$ 个样本 若我们使用数据集 $D$ 来训练模型， 而 $D$ 中所有的类中 $a$ 个样本，eg. mini-imagenet 中每个类有 600 个样本，则 $a=600$。整体的训练过程可以分为多个 meta-learning 的过程，在每个 meta-learning 开始的时候，从训练集 $D$ 中随机抽取 $N$ 个类，每个类中抽取 $K$ 个样本做成 Support Set，除此之外，还从已经抽取得到每个类中，除已抽取的样本外，再抽取 $T$ 个样本作为 Query Set。之后，模型将会去学习如何根据 Support Set 的样本，来正确分类 Query Set 的样本。 Learning to Compare：Relation Network for Few-Shot Learning CVPR 2018 &amp;#8617;</summary></entry><entry><title type="html">让命令行多一个进度条</title><link href="http://localhost:4000/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/2019/03/22/%E8%AE%A9%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%A4%9A%E4%B8%80%E4%B8%AA%E8%BF%9B%E5%BA%A6%E6%9D%A1/" rel="alternate" type="text/html" title="让命令行多一个进度条" /><published>2019-03-22T00:00:00+08:00</published><updated>2019-03-22T00:00:00+08:00</updated><id>http://localhost:4000/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/2019/03/22/%E8%AE%A9%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%A4%9A%E4%B8%80%E4%B8%AA%E8%BF%9B%E5%BA%A6%E6%9D%A1</id><content type="html" xml:base="http://localhost:4000/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/2019/03/22/%E8%AE%A9%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%A4%9A%E4%B8%80%E4%B8%AA%E8%BF%9B%E5%BA%A6%E6%9D%A1/">&lt;h2 id=&quot;使用场景&quot;&gt;使用场景&lt;/h2&gt;
&lt;p&gt;当我们在拷贝或者解压的时候，我们需要一个进度条。但是遗憾的是，Linux 自带的指令的选项中并没有这个选项，所以我们需要手动给他创造一个。这时候就用到了一个 Github 上开源的软件 &lt;code class=&quot;highlighter-rouge&quot;&gt;cv&lt;/code&gt;，地址在&lt;a href=&quot;https://github.com/Xfennec/progress/blob/master/README.md&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;安装&quot;&gt;安装&lt;/h2&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# fist clone the repo&lt;/span&gt;
git clone https://github.com/Xfennec/progress.git

&lt;span class=&quot;c&quot;&gt;# change to the repo&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;cv &lt;span class=&quot;c&quot;&gt;# the path that you cloned just before&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# make install&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;make &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; make install

&lt;span class=&quot;c&quot;&gt;# if you catch up some error, follow the output message&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;make &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; make install &lt;span class=&quot;nt&quot;&gt;-PREFIX&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;~

&lt;span class=&quot;c&quot;&gt;# then add the line below to the ~/.bashrc or ~/.zshrc&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;~/bin&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;:+:&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;使用&quot;&gt;使用&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;给 &lt;code class=&quot;highlighter-rouge&quot;&gt;cp&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;tar&lt;/code&gt; 指令加上进度条和速度
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; cp bigfile newfile &amp;amp; progress &lt;span class=&quot;nt&quot;&gt;-mp&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;看当前所有的实例的进度
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; watch progress &lt;span class=&quot;nt&quot;&gt;-q&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;参考文献&quot;&gt;参考文献&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/Xfennec/progress.git&quot;&gt;CV 的 Github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>DeamoV</name></author><category term="Mac 软件" /><category term="杂项" /><category term="效率" /><category term="服务器小工具" /><summary type="html">使用场景 当我们在拷贝或者解压的时候，我们需要一个进度条。但是遗憾的是，Linux 自带的指令的选项中并没有这个选项，所以我们需要手动给他创造一个。这时候就用到了一个 Github 上开源的软件 cv，地址在这里。</summary></entry></feed>